local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\31\235","\220\49\197\202\67\126"),function(v42)if (v9(v42,2)==79) then local v100=0;while true do if (0==v100) then v30=v8(v11(v42,1,1));return "";end end else local v101=0;local v102;while true do if (0==v101) then v102=v10(v8(v42,16));if v30 then local v120=0;local v121;while true do if (v120==1) then return v121;end if (0==v120) then v121=v13(v102,v30);v30=nil;v120=1;end end else return v102;end break;end end end end);local function v31(v43,v44,v45)if v45 then local v103=0;local v104;while true do if (v103==0) then v104=(v43/(2^(v44-1)))%((5 -3)^(((v45-1) -(v44-(2 -1))) + 1)) ;return v104-(v104%1) ;end end else local v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end local function v32()local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33()local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34()local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35()local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==0) then v54=v34();v55=v34();v53=1;end if (3==v53) then if (v58==0) then if (v57==0) then return v59 * (0 -0) ;else local v122=0;while true do if (v122==0) then v58=1;v56=0;break;end end end elseif (v58==2047) then return ((v57==(619 -(555 + 64))) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/((933 -(857 + 74))^52))) ;end if (v53==1) then v56=1;v57=(v31(v55,1,38 -18 ) * (2^32)) + v54 ;v53=2;end if (v53==2) then v58=v31(v55,21,31);v59=((v31(v55,32)==1) and  -1) or 1 ;v53=3;end end end local function v36(v60)local v61=0;local v62;local v63;while true do if (2==v61) then v63={};for v109=1, #v62 do v63[v109]=v10(v9(v11(v62,v109,v109)));end v61=3;end if (v61==3) then return v14(v63);end if (0==v61) then v62=nil;if  not v60 then local v115=0;while true do if (v115==0) then v60=v34();if (v60==(568 -(367 + 201))) then return "";end break;end end end v61=1;end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -(928 -(214 + 713)) );v29=v29 + v60 ;v61=2;end end end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1 + 0 ,v68 do local v78=v32();local v79;if (v78==1) then v79=v32()~=(877 -(282 + 595)) ;elseif (v78==2) then v79=v35();elseif (v78==3) then v79=v36();end v69[v77]=v79;end v67[3]=v32();for v81=1,v34() do local v82=0;local v83;while true do if (v82==0) then v83=v32();if (v31(v83,1,1)==0) then local v116=0;local v117;local v118;local v119;while true do if (v116==0) then v117=v31(v83,1639 -(1523 + 114) ,3 + 0 );v118=v31(v83,4,6);v116=1;end if (v116==3) then if (v31(v118,3,3)==1) then v119[4]=v69[v119[4]];end v64[v81]=v119;break;end if (v116==1) then v119={v33(),v33(),nil,nil};if (v117==0) then local v126=0;while true do if (v126==0) then v119[3]=v33();v119[4]=v33();break;end end elseif (v117==1) then v119[3]=v34();elseif (v117==2) then v119[3]=v34() -(2^16) ;elseif (v117==3) then local v300=0;while true do if (0==v300) then v119[3 -0 ]=v34() -(2^(1081 -(68 + 997))) ;v119[4]=v33();break;end end end v116=2;end if (v116==2) then if (v31(v118,1,1)==1) then v119[2]=v69[v119[2]];end if (v31(v118,2,2)==1) then v119[1273 -(226 + 1044) ]=v69[v119[3]];end v116=3;end end end break;end end end for v84=1,v34() do v65[v84-1 ]=v39();end return v67;end local function v40(v71,v72,v73)local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...)local v86=v74;local v87=v75;local v88=v76;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v106=117 -(32 + 85) ,v94 do if (v106>=v88) then v92[v106-v88 ]=v93[v106 + 1 ];else v96[v106]=v93[v106 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do v98=v86[v90];v99=v98[1];if (v99<=41) then if (v99<=20) then if (v99<=9) then if (v99<=4) then if (v99<=(1 + 0)) then if (v99>0) then local v134=0;local v135;while true do if (v134==0) then v135=v98[1 + 1 ];do return v96[v135](v21(v96,v135 + 1 ,v98[3]));end break;end end else local v136=0;local v137;local v138;local v139;while true do if (v136==1) then v139=v98[3];for v333=1,v139 do v138[v333]=v96[v137 + v333 ];end break;end if (v136==0) then v137=v98[2];v138=v96[v137];v136=1;end end end elseif (v99<=2) then local v140=0;local v141;local v142;while true do if (v140==0) then v141=v98[2];v142=v96[v141];v140=1;end if (v140==1) then for v336=v141 + 1 ,v98[3] do v15(v142,v96[v336]);end break;end end elseif (v99==3) then local v202=v98[959 -(892 + 65) ];local v203=v96[v202 + 2 ];local v204=v96[v202] + v203 ;v96[v202]=v204;if (v203>0) then if (v204<=v96[v202 + 1 ]) then v90=v98[3];v96[v202 + 3 ]=v204;end elseif (v204>=v96[v202 + 1 ]) then local v369=0;while true do if (v369==0) then v90=v98[3];v96[v202 + 3 ]=v204;break;end end end else v96[v98[4 -2 ]]=v40(v87[v98[3]],nil,v73);end elseif (v99<=6) then if (v99==5) then local v143=0;local v144;while true do if (v143==0) then v144=v98[2];v96[v144]=v96[v144]();break;end end else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=7) then v96[v98[2]]=v96[v98[3]];elseif (v99==8) then local v207=0;local v208;while true do if (0==v207) then v208=v98[2];v96[v208](v21(v96,v208 + 1 ,v98[3]));break;end end else local v209=0;local v210;local v211;while true do if (1==v209) then for v370=v210 + 1 ,v91 do v15(v211,v96[v370]);end break;end if (0==v209) then v210=v98[3 -1 ];v211=v96[v210];v209=1;end end end elseif (v99<=14) then if (v99<=11) then if (v99>10) then for v199=v98[2],v98[3] do v96[v199]=nil;end else local v148=v98[3 -1 ];local v149=v96[v148];for v201=v148 + 1 ,v91 do v15(v149,v96[v201]);end end elseif (v99<=(362 -(87 + 263))) then v96[v98[182 -(67 + 113) ]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99==13) then v96[v98[2]]=v98[3];else v96[v98[2]]={};end elseif (v99<=17) then if (v99<=15) then v96[v98[2]]=v96[v98[3]] + v98[3 + 1 ] ;elseif (v99==16) then local v215=0;local v216;local v217;local v218;local v219;while true do if (v215==1) then v91=(v218 + v216) -1 ;v219=0;v215=2;end if (v215==2) then for v371=v216,v91 do local v372=0;while true do if (v372==0) then v219=v219 + 1 ;v96[v371]=v217[v219];break;end end end break;end if (v215==0) then v216=v98[2];v217,v218=v89(v96[v216](v21(v96,v216 + 1 ,v98[3])));v215=1;end end else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=18) then v96[v98[4 -2 ]][v98[3]]=v98[4];elseif (v99>19) then v96[v98[2]]=v73[v98[3]];else local v223=0;local v224;local v225;local v226;local v227;while true do if (0==v223) then v224=v98[2];v225,v226=v89(v96[v224](v96[v224 + 1 ]));v223=1;end if (v223==1) then v91=(v226 + v224) -1 ;v227=0;v223=2;end if (v223==2) then for v373=v224,v91 do local v374=0;while true do if (0==v374) then v227=v227 + 1 ;v96[v373]=v225[v227];break;end end end break;end end end elseif (v99<=30) then if (v99<=25) then if (v99<=22) then if (v99>21) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else do return v96[v98[2]]();end end elseif (v99<=23) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v99>24) then local v229=0;local v230;while true do if (v229==0) then v230=v98[2];v96[v230](v96[v230 + 1 ]);break;end end else local v231=v98[2 + 0 ];local v232=v96[v231];local v233=v96[v231 + 2 ];if (v233>0) then if (v232>v96[v231 + 1 ]) then v90=v98[3];else v96[v231 + 3 ]=v232;end elseif (v232<v96[v231 + 1 ]) then v90=v98[11 -8 ];else v96[v231 + 3 ]=v232;end end elseif (v99<=27) then if (v99==26) then local v156=0;local v157;local v158;while true do if (0==v156) then v157=v98[954 -(802 + 150) ];v158=v96[v98[3]];v156=1;end if (v156==1) then v96[v157 + 1 ]=v158;v96[v157]=v158[v98[4]];break;end end else v96[v98[2]]=v72[v98[3]];end elseif (v99<=28) then if (v98[5 -3 ]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>29) then local v235=0;local v236;local v237;local v238;while true do if (v235==0) then v236=v87[v98[3]];v237=nil;v235=1;end if (v235==1) then v238={};v237=v18({},{[v7("\248\251\87\57\95\1\223","\100\167\164\62\87\59")]=function(v379,v380)local v381=0;local v382;while true do if (v381==0) then v382=v238[v380];return v382[1][v382[2]];end end end,[v7("\191\105\78\204\240\11\39\132\83\88","\73\224\54\32\169\135\98")]=function(v383,v384,v385)local v386=0;local v387;while true do if (v386==0) then v387=v238[v384];v387[1][v387[2]]=v385;break;end end end});v235=2;end if (v235==2) then for v388=1,v98[4] do local v389=0;local v390;while true do if (v389==0) then v90=v90 + 1 ;v390=v86[v90];v389=1;end if (v389==1) then if (v390[1]==42) then v238[v388-1 ]={v96,v390[3]};else v238[v388-1 ]={v72,v390[3]};end v95[ #v95 + (1 -0) ]=v238;break;end end end v96[v98[2]]=v40(v236,v237,v73);break;end end else v96[v98[2]]=v40(v87[v98[3]],nil,v73);end elseif (v99<=35) then if (v99<=32) then if (v99>31) then local v161=0;local v162;while true do if (v161==0) then v162=v98[2];v96[v162]=v96[v162](v21(v96,v162 + 1 ,v98[3]));break;end end else v90=v98[3];end elseif (v99<=33) then v96[v98[2]]=v98[3];elseif (v99==34) then local v240=0;local v241;while true do if (0==v240) then v241=v98[2];v96[v241](v21(v96,v241 + 1 ,v91));break;end end else local v242=v98[2 + 0 ];local v243=v96[v242];local v244=v98[3];for v316=1,v244 do v243[v316]=v96[v242 + v316 ];end end elseif (v99<=(1035 -(915 + 82))) then if (v99<=36) then local v166=0;local v167;while true do if (v166==0) then v167=v98[2];v96[v167]=v96[v167](v21(v96,v167 + 1 ,v91));break;end end elseif (v99>(104 -67)) then local v245=v98[2 + 0 ];do return v21(v96,v245,v91);end else local v246=v98[2];v96[v246](v21(v96,v246 + 1 ,v98[3]));end elseif (v99<=(50 -11)) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==40) then v96[v98[2]]=v96[v98[3]] + v98[1191 -(1069 + 118) ] ;else v96[v98[4 -2 ]]=v73[v98[6 -3 ]];end elseif (v99<=(11 + 51)) then if (v99<=51) then if (v99<=46) then if (v99<=43) then if (v99>42) then v96[v98[2]]= #v96[v98[3]];else v96[v98[2]]=v96[v98[3]];end elseif (v99<=44) then if v96[v98[3 -1 ]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>45) then local v252=0;local v253;while true do if (v252==0) then v253=v98[2 + 0 ];v96[v253]=v96[v253](v21(v96,v253 + 1 ,v98[3]));break;end end else v96[v98[2]][v96[v98[3]]]=v98[4];end elseif (v99<=48) then if (v99==47) then do return;end else v96[v98[2]]=v96[v98[3]][v96[v98[4]]];end elseif (v99<=49) then if (v96[v98[793 -(368 + 423) ]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>50) then v96[v98[2]][v98[3]]=v96[v98[4]];else v96[v98[6 -4 ]]= #v96[v98[3]];end elseif (v99<=56) then if (v99<=(71 -(10 + 8))) then if (v99==(199 -147)) then local v173=0;local v174;while true do if (v173==0) then v174=v98[2];do return v96[v174](v21(v96,v174 + 1 ,v98[3]));end break;end end else v96[v98[2]][v96[v98[3]]]=v96[v98[446 -(416 + 26) ]];end elseif (v99<=54) then local v177=0;local v178;local v179;local v180;local v181;while true do if (v177==1) then v91=(v180 + v178) -1 ;v181=0;v177=2;end if (v177==0) then v178=v98[2];v179,v180=v89(v96[v178](v21(v96,v178 + (3 -2) ,v91)));v177=1;end if (v177==2) then for v337=v178,v91 do local v338=0;while true do if (v338==0) then v181=v181 + 1 ;v96[v337]=v179[v181];break;end end end break;end end elseif (v99>55) then v96[v98[1 + 1 ]][v96[v98[3]]]=v96[v98[4]];else local v262=v98[2];local v263,v264=v89(v96[v262](v96[v262 + 1 ]));v91=(v264 + v262) -1 ;local v265=0 -0 ;for v323=v262,v91 do local v324=0;while true do if (v324==0) then v265=v265 + (439 -(145 + 293)) ;v96[v323]=v263[v265];break;end end end end elseif (v99<=59) then if (v99<=57) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==58) then for v325=v98[2],v98[3] do v96[v325]=nil;end else local v267=0;local v268;local v269;local v270;while true do if (v267==0) then v268=v87[v98[3]];v269=nil;v267=1;end if (v267==1) then v270={};v269=v18({},{[v7("\247\244\126\42\80\248\213","\173\168\171\23\68\52\157")]=function(v393,v394)local v395=0;local v396;while true do if (v395==0) then v396=v270[v394];return v396[1][v396[2]];end end end,[v7("\184\203\127\240\200\142\250\117\240\199","\191\231\148\17\149")]=function(v397,v398,v399)local v400=0;local v401;while true do if (v400==0) then v401=v270[v398];v401[1][v401[2]]=v399;break;end end end});v267=2;end if (v267==2) then for v402=1,v98[4] do v90=v90 + 1 ;local v403=v86[v90];if (v403[1]==42) then v270[v402-1 ]={v96,v403[3]};else v270[v402-(431 -(44 + 386)) ]={v72,v403[3]};end v95[ #v95 + (1487 -(998 + 488)) ]=v270;end v96[v98[1 + 1 ]]=v40(v268,v269,v73);break;end end end elseif (v99<=60) then v96[v98[2]]=v96[v98[3]]%v98[4] ;elseif (v99>61) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2 + 0 ]][v98[3]]=v96[v98[4]];end elseif (v99<=73) then if (v99<=67) then if (v99<=64) then if (v99>63) then v96[v98[774 -(201 + 571) ]]=v96[v98[1141 -(116 + 1022) ]]%v96[v98[4]] ;else do return;end end elseif (v99<=65) then v96[v98[2]][v98[3]]=v98[4];elseif (v99>66) then v96[v98[2]]=v96[v98[12 -9 ]][v98[4]];else local v275=v98[2];v96[v275]=v96[v275]();end elseif (v99<=70) then if (v99<=68) then local v186=0;local v187;while true do if (v186==0) then v187=v98[2];v96[v187](v96[v187 + 1 ]);break;end end elseif (v99>69) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[2 + 1 ];end else v96[v98[2]]=v96[v98[3]][v96[v98[14 -10 ]]];end elseif (v99<=71) then v96[v98[2]]=v72[v98[3]];elseif (v99>(255 -183)) then local v279=v98[2];local v280,v281=v89(v96[v279](v21(v96,v279 + (860 -(814 + 45)) ,v91)));v91=(v281 + v279) -1 ;local v282=0;for v328=v279,v91 do local v329=0;while true do if (0==v329) then v282=v282 + 1 ;v96[v328]=v280[v282];break;end end end else local v283=v98[2];do return v21(v96,v283,v91);end end elseif (v99<=78) then if (v99<=75) then if (v99==74) then v96[v98[4 -2 ]]=v98[3] + v96[v98[4]] ;else local v191=0;local v192;local v193;local v194;while true do if (v191==0) then v192=v98[2];v193=v96[v192];v191=1;end if (v191==1) then v194=v96[v192 + 2 ];if (v194>0) then if (v193>v96[v192 + 1 + 0 ]) then v90=v98[3];else v96[v192 + 2 + 1 ]=v193;end elseif (v193<v96[v192 + 1 ]) then v90=v98[3];else v96[v192 + (888 -(261 + 624)) ]=v193;end break;end end end elseif (v99<=76) then v96[v98[2]]={};elseif (v99>77) then local v284=0;local v285;while true do if (v284==0) then v285=v98[2];v96[v285]=v96[v285](v21(v96,v285 + 1 ,v91));break;end end else local v286=v98[2];v96[v286](v21(v96,v286 + 1 ,v91));end elseif (v99<=81) then if (v99<=79) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v99>80) then local v287=0;local v288;local v289;while true do if (0==v287) then v288=v98[2];v289=v96[v98[3]];v287=1;end if (v287==1) then v96[v288 + 1 ]=v289;v96[v288]=v289[v98[6 -2 ]];break;end end else local v290=0;local v291;local v292;local v293;while true do if (v290==2) then if (v292>0) then if (v293<=v96[v291 + 1 ]) then local v431=0;while true do if (v431==0) then v90=v98[1083 -(1020 + 60) ];v96[v291 + 3 ]=v293;break;end end end elseif (v293>=v96[v291 + 1 ]) then local v432=0;while true do if (v432==0) then v90=v98[1426 -(630 + 793) ];v96[v291 + 3 ]=v293;break;end end end break;end if (v290==1) then v293=v96[v291] + v292 ;v96[v291]=v293;v290=2;end if (0==v290) then v291=v98[2];v292=v96[v291 + 2 ];v290=1;end end end elseif (v99<=82) then do return v96[v98[2]]();end elseif (v99>(280 -197)) then local v294=0;local v295;local v296;local v297;local v298;while true do if (v294==0) then v295=v98[2];v296,v297=v89(v96[v295](v21(v96,v295 + 1 ,v98[3])));v294=1;end if (v294==2) then for v407=v295,v91 do local v408=0;while true do if (v408==0) then v298=v298 + 1 ;v96[v407]=v296[v298];break;end end end break;end if (v294==1) then v91=(v297 + v295) -1 ;v298=0;v294=2;end end else v90=v98[3];end v90=v90 + 1 ;end end;end return v40(v39(),{},v28)(...);end vv17(),...);
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.16) ~  Much Love, Ferib 

]]--

